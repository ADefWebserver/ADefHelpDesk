@page "/"
@page "/index"
@page "/{ticketnumber:int}/{ticketPassword?}"
@using ADefHelpDeskWebApp.Classes
@using AdefHelpDeskBase.Models.DataContext
@using Microsoft.EntityFrameworkCore
@using ADefHelpDeskWebApp.Components.Pages.TicketControls
@inject IConfiguration _configuration
@inject IJSRuntime JSRuntime
@inject ADefHelpDeskContext context

<TicketCreate ticketnumber=@ticketnumber ticketPassword=@ticketPassword />

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    [Parameter]
    public int ticketnumber { get; set; } = -1;

    [Parameter]
    public string ticketPassword { get; set; } = "";

    bool IsAdmin = false;
    System.Security.Claims.ClaimsPrincipal CurrentUser;
    string strDefaultConnection = "";

    protected override async Task OnInitializedAsync()
    {
        // Get database conection string
        strDefaultConnection = _configuration["ConnectionStrings:DefaultConnection"];

        // Get the current user
        CurrentUser = (await authenticationStateTask).User;

        IsAdmin = await IsAdminAsync();
    }

    public async Task<bool> IsAdminAsync()
    {
        bool result = false;

        var optionsBuilder = new DbContextOptionsBuilder<ADefHelpDeskContext>();
        optionsBuilder.UseSqlServer(strDefaultConnection);

        using (var context = new ADefHelpDeskContext(optionsBuilder.Options))
        {
            try
            {
                if (CurrentUser.Identity == null)
                {
                    return false;
                }

                if (CurrentUser.Identity.Name == null)
                {
                    return false;
                }
                
                // Get the user
                var objUser = await (from user in context.AdefHelpDeskUsers
                                     where user.Username.ToLower() == CurrentUser.Identity.Name.ToLower()
                                     where user.IsSuperUser == true
                                     select user).FirstOrDefaultAsync();

                if (objUser != null)
                {
                    result = true;
                }
                else
                {
                    result = false;
                }
            }
            catch
            {
                result = false;
            }
        }

        return result;
    }
}